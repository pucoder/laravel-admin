<?php

namespace Encore\Admin\Form\Field;

use Encore\Admin\Form\Field;

class PhotoAlbum extends Field
{
    /**
     * @var array
     */
    protected $relatedField = [];

    protected function getOptions()
    {
        return $this->options;
    }

    /**
     * @param string $field
     * @param string $dataKey
     * @return $this
     */
    public function related(string $field, string $dataKey)
    {
        $this->relatedField = [$field, $dataKey];

        return $this;
    }

    public function render()
    {
        $confirm = trans('admin.confirm');
        $cancel = trans('admin.cancel');
        $title = '<h2>请选择' . $this->label . '</h2>';
        $no = '没有' . $this->label;
        $this->addVariables([
            'options' => $this->getOptions(),
        ]);

        if ($this->relatedField) {
            $relatedField = json_encode($this->relatedField, true);
            $this->script .= <<<SCRIPT
var related_field = JSON.parse('{$relatedField}');
function setDataValue(input, value) {
    input.attr('data-value', value);
}

$.each($('.' + related_field[0]), function () {
    var photoAlbum = $(this).find('option:selected').data(related_field[1]);
    var input = $(this).parents('.form-group:first').next().find('input');
    setDataValue(input, photoAlbum);
});

$('body').on('change', '.' + related_field[0], function () {
    var preview = $(this).parents('.form-group:first').next();
    preview.find('img').css({'display': 'none'});
    preview.find('svg').css({'display': 'block'});
    preview.find('input').val('');
    var input = preview.find('input');
    var photoAlbum = $(this).find('option:selected').data(related_field[1]);
    setDataValue(input, photoAlbum);
});
SCRIPT;
        }

        $this->script .= <<<SCRIPT
var tpl = $('template.swal-img-tpl');
$('body').on('click', '.preview-image', function () {
    var preview_image = $(this);
    var input_group = preview_image.parent();

    var data_value = input_group.find('input').attr('data-value');

    if (!data_value) {
        return $.admin.swal.fire({icon: 'error', title: '{$no}'});
    }
    var modal_body = '';
    $.each(data_value.split(','), function (key, val) {
        modal_body += tpl.html().replace('src-value', val);
    });
    return $.admin.swal.fire({
        title: '{$title}',
        html: modal_body,
        showCancelButton: true,
        showLoaderOnConfirm: true,
        confirmButtonText: '{$confirm}',
        cancelButtonText: '{$cancel}',
        preConfirm: function () {
            var value = $('.swal2-container .preview.selected').attr('src');
            if (typeof(value) !== 'undefined') {
                input_group.find('svg').css({'display': 'none'});
                input_group.find('img').attr('src', value).css({'display': 'block'});
                input_group.find('input').val(value);
            }
        }
    });
}).on('click', '.swal2-container .preview', function () {
    $('.swal2-container .preview').removeClass('selected').css({border: '1px solid #ddd'});
    $(this).addClass('selected').css({border: '2px solid #008d4c'});
});
SCRIPT;
        return parent::render(); // TODO: Change the autogenerated stub
    }
}
